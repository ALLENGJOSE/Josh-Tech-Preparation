ITERATIVE APPROACH:
class Solution {
    public ListNode reverseList(ListNode head) {
        
        ListNode prev=null;
        ListNode curr=head;

        while(curr!=null){
            ListNode nextNode=curr.next; // store the next node
            curr.next=prev;  //point address to prev
            prev=curr; //move forward
            curr=nextNode; // move forward
        }
        return prev;  //last node becomes the first node
    }
}
TC:O(N)
SC:O(1)

RECURSIVE APPROACH:
class Solution {
    public ListNode reverseList(ListNode head) {
        
        if(head==null || head.next==null){
            return head;
        }

        ListNode newhead=reverseList(head.next);
        head.next.next=head;
        head.next=null;

        return newhead;
    }
}

TC:O(N)
SC:O(N) // STACK
